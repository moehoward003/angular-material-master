{"ast":null,"code":"import { Router } from '@angular/router';\nimport * as auth0 from 'auth0-js';\nimport * as i0 from \"@angular/core\";\n// why do you need defining window as any?\n// check this: https://github.com/aws/aws-amplify/issues/678#issuecomment-389106098\nwindow.global = window;\nvar AuthService = /** @class */function () {\n  function AuthService(router) {\n    this.router = router;\n    this.auth0 = new auth0.WebAuth({\n      clientID: 'AAQbG8REMxtSrmXQiPGcl3Uochf7OuHS',\n      domain: 'bk-tmp.auth0.com',\n      responseType: 'token',\n      redirectUri: 'http://localhost:4200/',\n      scope: 'openid'\n    });\n  }\n  AuthService.prototype.login = function () {\n    this.auth0.authorize();\n  };\n  AuthService.prototype.handleAuthentication = function () {\n    var _this = this;\n    this.auth0.parseHash(function (err, authResult) {\n      if (authResult && authResult.accessToken) {\n        window.location.hash = '';\n        _this.accessToken = authResult.accessToken;\n        _this.expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n        _this.router.navigate(['/dashboard']);\n      } else if (err) {\n        _this.router.navigate(['/']);\n        console.log(err);\n      }\n    });\n  };\n  AuthService.prototype.logout = function () {\n    // Remove tokens and expiry time from localStorage\n    this.accessToken = null;\n    this.expiresAt = null;\n    // Go back to the home route\n    this.router.navigate(['/']);\n  };\n  AuthService.prototype.isAuthenticated = function () {\n    // Check whether the current time is past the\n    // Access Token's expiry time\n    return true; //new Date().getTime() < this.expiresAt;\n  };\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    i0.ɵɵinvalidFactory();\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n  return AuthService;\n}();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}